import re

class MedicalEthicsChatbot:
    def __init__(self):
        self.ethical_guidelines = self.load_guidelines()

    def load_guidelines(self):
        # Load ethical guidelines from a database or file
        return {
            "informed_consent": (
                "Informed consent must be obtained from all participants. This "
                "includes explaining potential risks and benefits in language the "
                "participant can understand."
            ),
            "data_privacy": (
                "Patient data must be kept confidential and secure. Only "
                "authorized individuals should access sensitive health "
                "information."
            ),
            "confidentiality": (
                "Confidentiality requires that patient information be shared "
                "only with those directly involved in their care unless the "
                "patient gives explicit permission."
            ),
            "beneficence": (
                "Clinicians should act in the best interest of the patient, "
                "striving to maximize benefits while minimizing potential "
                "harms."
            ),
            "nonmaleficence": (
                "The principle of non-maleficence obligates practitioners to "
                "avoid causing harm to patients whenever possible."
            ),
            "justice": (
                "Justice in medical ethics emphasizes fairness in the "
                "distribution of healthcare resources and treatments."
            ),
        }

    def get_response(self, user_input):
        user_input = user_input.lower()

        keyword_map = {
            "consent": "informed_consent",
            "privacy": "data_privacy",
            "data": "data_privacy",
            "confidential": "confidentiality",
            "beneficence": "beneficence",
            "nonmaleficence": "nonmaleficence",
            "justice": "justice",
        }

        for keyword, guideline_key in keyword_map.items():
            if re.search(r"\b" + re.escape(keyword) + r"\b", user_input):
                return self.ethical_guidelines[guideline_key]

        return (
            "I'm sorry, I don't have information on that topic. "
            "Please consult a qualified medical ethics professional "
            "for specific guidance."
        )

    def start_chat(self):
        print("Welcome to the Medical Ethics Chatbot!")
        while True:
            user_input = input("You: ")
            if user_input.lower() in ["exit", "quit"]:
                break
            response = self.get_response(user_input)
            print(f"Chatbot: {response}")

if __name__ == "__main__":
    bot = MedicalEthicsChatbot()
    bot.start_chat()
