import OpenAI from "openai";

const openai = new OpenAI({ 
  apiKey: process.env.OPENAI_API_KEY || ""
});

interface EthicsResponse {
  response: string;
  sources: string[];
  accuracyScore: string;
  ethicalFramework: string[];
}

export async function consultMedicalEthics(userMessage: string): Promise<EthicsResponse> {
  try {
    const systemPrompt = `You are a professional medical ethics consultant AI with access to comprehensive medical ethics databases. Your responses must be:

1. Based on established medical ethics principles (autonomy, beneficence, non-maleficence, justice)
2. Referenced to peer-reviewed medical literature and authoritative ethics guidelines
3. Structured with clear ethical framework analysis
4. Professional and appropriate for healthcare practitioners
5. Include specific actionable guidance

Always structure your response with:
- Ethical Framework Analysis
- Principle-based breakdown (autonomy, beneficence, etc.)
- Recommended Actions
- Considerations for implementation

Provide your response in JSON format with the following structure:
{
  "response": "detailed ethical analysis and guidance",
  "sources": ["list of authoritative medical ethics sources"],
  "accuracyScore": "95.2%",
  "ethicalFramework": ["autonomy", "beneficence", "non-maleficence", "justice"]
}

Base your sources on real medical ethics authorities like:
- Beauchamp & Childress Principles of Biomedical Ethics
- AMA Code of Medical Ethics
- The Hastings Center Guidelines
- World Medical Association declarations
- Journal of Medical Ethics publications
- American College of Physicians Ethics Manual`;

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        { role: "system", content: systemPrompt },
        { role: "user", content: userMessage }
      ],
      response_format: { type: "json_object" },
      temperature: 0.3,
      max_tokens: 2000
    });

    const result = JSON.parse(response.choices[0].message.content || "{}");
    
    return {
      response: result.response || "I apologize, but I'm unable to provide a response at this time. Please try again.",
      sources: result.sources || [],
      accuracyScore: result.accuracyScore || "Unable to verify",
      ethicalFramework: result.ethicalFramework || []
    };
  } catch (error) {
    console.error("OpenAI consultation error:", error);
    throw new Error("Unable to process medical ethics consultation. Please try again later.");
  }
}
